<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.2.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
	   default-lazy-init="true">
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<!--<context:component-scan base-package="reservations">-->
		<!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
		<!--<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>-->
	<!--</context:component-scan>-->
	<!--<context:component-scan base-package="service">-->
		<!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
		<!--<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>-->
	<!--</context:component-scan>-->
	<mvc:annotation-driven/>
	<mvc:default-servlet-handler/>
	<context:component-scan base-package="sso.*" />
	<context:component-scan base-package="leave" />
	<context:component-scan base-package="modal" />

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<!--<context:component-scan base-package="service">-->
		<!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
		<!--<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>-->
	<!--</context:component-scan>-->
	<!--<context:component-scan base-package="reservations">-->
		<!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
		<!--<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>-->
	<!--</context:component-scan>-->


	<!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="dataSource" />-->
	<!--</bean>-->



	<!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
		<!--<tx:attributes>-->
			<!--<tx:method name="find*" propagation="REQUIRED" read-only="true"/>-->
			<!--<tx:method name="get*" propagation="REQUIRED"  read-only="true"/>-->
			<!--<tx:method name="count*" propagation="REQUIRED"  read-only="true"/>-->
			<!--<tx:method name="*" propagation="REQUIRED" />-->
		<!--</tx:attributes>-->
	<!--</tx:advice>-->

	<!--<aop:config>-->
		<!--<aop:pointcut id="allManagerMethod" expression="execution(* service.*.*(..))" />-->
		<!--<aop:advisor advice-ref="txAdvice"  pointcut-ref="allManagerMethod" />-->
	<!--</aop:config>-->

	<!-- enable transaction demarcation with annotations
    <tx:annotation-driven /> -->

	<!--&lt;!&ndash; 扫描basePackage下所有以@MyBatisRepository标识的 接口 &ndash;&gt;-->
	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
		<!--<property name="basePackage" value="dao" />-->
	<!--</bean>-->

	<!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
		<!--<property name="dataSource" ref="dataSource" />-->
		<!--<property name="typeAliasesPackage" value="model" />-->

		<!--<property name="mapperLocations" value="classpath:/mapper/*Dao.xml" />-->
		<!--<property name="configLocation" value="classpath:config/mybatis-config.xml"/>-->
	<!--</bean>-->

	<!--&lt;!&ndash; JSR303 Validator定义 &ndash;&gt;-->
	<!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />-->

	<!--&lt;!&ndash; local development环境 &ndash;&gt;-->
	<!--<beans profile="dev">-->
		<!--<context:property-placeholder-->
				<!--ignore-resource-not-found="true"-->
				<!--location="classpath*:config/application.dev.properties" />-->
		<!--&lt;!&ndash; DBCP连接池 &ndash;&gt;-->
		<!--<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"-->
			  <!--destroy-method="close">-->
			<!--<property name="driverClassName" value="${jdbc.driver}" />-->
			<!--<property name="url" value="${jdbc.url}" />-->
			<!--<property name="username" value="${jdbc.username}" />-->
			<!--<property name="password" value="${jdbc.password}" />-->
			<!--<property name="defaultAutoCommit" value="false" />-->
			<!--&lt;!&ndash; 连接Idle一个小时后超时 &ndash;&gt;-->
			<!--<property name="timeBetweenEvictionRunsMillis" value="3600000" />-->
			<!--<property name="minEvictableIdleTimeMillis" value="3600000" />-->
		<!--</bean>-->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- 这里支持多种寻址方式：classpath和file -->
				<value>classpath:/config/lightappdemo.properties</value>
				<value>classpath:/config/config.properties</value>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"/>
		<property name="suffix" value=".jsp" />
	</bean>




	<bean id="myScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="myTriggersA"></ref>
			</list>
		</property>
		<property name="autoStartup" value="true"></property>
	</bean>

	<bean id="myTriggersA"
		  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="myJobDetailA">
		</property>
		<property name="cronExpression">
			<value>0 0 23 * * ?</value>
		</property>
	</bean>
	<bean id="myJobDetailA"
		  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="myJobA">
		</property>
		<property name="targetMethod" value="run"></property>
		<property name="concurrent" value="false" />
		<!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
	</bean>

	<bean id="myJobA" class="scheduler.UserDataJob">
	</bean>
</beans>

